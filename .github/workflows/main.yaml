name: Elastic Beanstalk CI/CD
on:
  push:
    branches:
      - "master"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     ecr: false
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Build and push Docker images
      #   run: |
      #     docker-compose -f docker-compose-prod-build.yml build
      #     docker-compose -f docker-compose-prod-build.yml push
  deploy:
    runs-on: ubuntu-latest
    needs: build # Ensure the build job is completed before deploying

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Python 3.9
      - name: Install Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # Install the EB CLI using pip
      - name: Install EB CLI
        run: |
          python -m pip install --upgrade pip
          pip install awsebcli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      # - name: Init EB CLI
      #   run: |
      #     eb init

      # - name: Deploy to Elastic Beanstalk
      #   run: |
      #     eb init -p docker MERN-SampleApp -r eu-west-1
      #     eb use dev-env
      #     eb deploy dev-env

      # Check if Elastic Beanstalk environment exists
      - name: Check if Elastic Beanstalk environment exists
        run: |
          eb list
          echo "::set-env name=EB_ENV_EXISTS::$(eb list | grep -c '^dev-env$')"

      # Create Elastic Beanstalk environment if it doesn't exist
      - name: Create Elastic Beanstalk environment if it doesn't exist
        run: |
          if [ "${{ env.EB_ENV_EXISTS }}" -eq "0" ]; then
            eb create dev-env --single --envvars "DOCKER_COMPOSE_FILE=docker-compose.yml" --cname dev-env.eu-west-1.elasticbeanstalk.com
          fi

      # This is the step that is deploying the application to Elastic Beanstalk.
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: MERN-SampleApp
          environment_name: dev-env
          region: eu-west-1
          version_label: "version-${{ github.run_number }}"
          deployment_package: docker-compose.yml
